// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shipping.proto

/*
Package shipping is a generated protocol buffer package.

It is generated from these files:
	shipping.proto

It has these top-level messages:
	ShippingCostRequest
	ShippingCostResponse
	MarkShippedRequest
	MarkShippedResponse
	ShippingStatusRequest
	ShippingStatusResponse
	ShippingStatus
	ShippingCost
	Error
*/
package shipping

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ShippingMethod int32

const (
	ShippingMethod_SM_UNKNOWN ShippingMethod = 0
	ShippingMethod_SM_USPS    ShippingMethod = 1
	ShippingMethod_SM_UPS     ShippingMethod = 2
	ShippingMethod_SM_FEDEX   ShippingMethod = 3
	ShippingMethod_SM_RAVEN   ShippingMethod = 4
)

var ShippingMethod_name = map[int32]string{
	0: "SM_UNKNOWN",
	1: "SM_USPS",
	2: "SM_UPS",
	3: "SM_FEDEX",
	4: "SM_RAVEN",
}
var ShippingMethod_value = map[string]int32{
	"SM_UNKNOWN": 0,
	"SM_USPS":    1,
	"SM_UPS":     2,
	"SM_FEDEX":   3,
	"SM_RAVEN":   4,
}

func (x ShippingMethod) String() string {
	return proto.EnumName(ShippingMethod_name, int32(x))
}
func (ShippingMethod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ErrorCode int32

const (
	ErrorCode_UNKNOWN       ErrorCode = 0
	ErrorCode_NOSUCHSKU     ErrorCode = 1
	ErrorCode_NOSUCHORDER   ErrorCode = 2
	ErrorCode_NOTAUTHORIZED ErrorCode = 3
)

var ErrorCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "NOSUCHSKU",
	2: "NOSUCHORDER",
	3: "NOTAUTHORIZED",
}
var ErrorCode_value = map[string]int32{
	"UNKNOWN":       0,
	"NOSUCHSKU":     1,
	"NOSUCHORDER":   2,
	"NOTAUTHORIZED": 3,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ShippingCostRequest struct {
	Sku     string `protobuf:"bytes,1,opt,name=sku" json:"sku,omitempty"`
	ZipCode string `protobuf:"bytes,2,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
}

func (m *ShippingCostRequest) Reset()                    { *m = ShippingCostRequest{} }
func (m *ShippingCostRequest) String() string            { return proto.CompactTextString(m) }
func (*ShippingCostRequest) ProtoMessage()               {}
func (*ShippingCostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ShippingCostRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *ShippingCostRequest) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

type ShippingCostResponse struct {
	ShippingCosts []*ShippingCost `protobuf:"bytes,1,rep,name=shipping_costs,json=shippingCosts" json:"shipping_costs,omitempty"`
	Error         *Error          `protobuf:"bytes,100,opt,name=error" json:"error,omitempty"`
}

func (m *ShippingCostResponse) Reset()                    { *m = ShippingCostResponse{} }
func (m *ShippingCostResponse) String() string            { return proto.CompactTextString(m) }
func (*ShippingCostResponse) ProtoMessage()               {}
func (*ShippingCostResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ShippingCostResponse) GetShippingCosts() []*ShippingCost {
	if m != nil {
		return m.ShippingCosts
	}
	return nil
}

func (m *ShippingCostResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type MarkShippedRequest struct {
	Sku            string         `protobuf:"bytes,1,opt,name=sku" json:"sku,omitempty"`
	OrderId        uint64         `protobuf:"varint,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Note           string         `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	ShippingMethod ShippingMethod `protobuf:"varint,4,opt,name=shipping_method,json=shippingMethod,enum=shipping.ShippingMethod" json:"shipping_method,omitempty"`
}

func (m *MarkShippedRequest) Reset()                    { *m = MarkShippedRequest{} }
func (m *MarkShippedRequest) String() string            { return proto.CompactTextString(m) }
func (*MarkShippedRequest) ProtoMessage()               {}
func (*MarkShippedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MarkShippedRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *MarkShippedRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *MarkShippedRequest) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *MarkShippedRequest) GetShippingMethod() ShippingMethod {
	if m != nil {
		return m.ShippingMethod
	}
	return ShippingMethod_SM_UNKNOWN
}

type MarkShippedResponse struct {
	Success        bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	TrackingNumber string `protobuf:"bytes,2,opt,name=tracking_number,json=trackingNumber" json:"tracking_number,omitempty"`
	Error          *Error `protobuf:"bytes,100,opt,name=error" json:"error,omitempty"`
}

func (m *MarkShippedResponse) Reset()                    { *m = MarkShippedResponse{} }
func (m *MarkShippedResponse) String() string            { return proto.CompactTextString(m) }
func (*MarkShippedResponse) ProtoMessage()               {}
func (*MarkShippedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MarkShippedResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MarkShippedResponse) GetTrackingNumber() string {
	if m != nil {
		return m.TrackingNumber
	}
	return ""
}

func (m *MarkShippedResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ShippingStatusRequest struct {
	OrderId uint64 `protobuf:"varint,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ShippingStatusRequest) Reset()                    { *m = ShippingStatusRequest{} }
func (m *ShippingStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*ShippingStatusRequest) ProtoMessage()               {}
func (*ShippingStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ShippingStatusRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type ShippingStatusResponse struct {
	ShippingStatus *ShippingStatus `protobuf:"bytes,1,opt,name=shipping_status,json=shippingStatus" json:"shipping_status,omitempty"`
	Error          *Error          `protobuf:"bytes,100,opt,name=error" json:"error,omitempty"`
}

func (m *ShippingStatusResponse) Reset()                    { *m = ShippingStatusResponse{} }
func (m *ShippingStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*ShippingStatusResponse) ProtoMessage()               {}
func (*ShippingStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ShippingStatusResponse) GetShippingStatus() *ShippingStatus {
	if m != nil {
		return m.ShippingStatus
	}
	return nil
}

func (m *ShippingStatusResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ShippingStatus struct {
	TrackingNumber string         `protobuf:"bytes,1,opt,name=tracking_number,json=trackingNumber" json:"tracking_number,omitempty"`
	ShippingMethod ShippingMethod `protobuf:"varint,2,opt,name=shipping_method,json=shippingMethod,enum=shipping.ShippingMethod" json:"shipping_method,omitempty"`
}

func (m *ShippingStatus) Reset()                    { *m = ShippingStatus{} }
func (m *ShippingStatus) String() string            { return proto.CompactTextString(m) }
func (*ShippingStatus) ProtoMessage()               {}
func (*ShippingStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ShippingStatus) GetTrackingNumber() string {
	if m != nil {
		return m.TrackingNumber
	}
	return ""
}

func (m *ShippingStatus) GetShippingMethod() ShippingMethod {
	if m != nil {
		return m.ShippingMethod
	}
	return ShippingMethod_SM_UNKNOWN
}

type ShippingCost struct {
	Method ShippingMethod `protobuf:"varint,1,opt,name=method,enum=shipping.ShippingMethod" json:"method,omitempty"`
	Price  int64          `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
}

func (m *ShippingCost) Reset()                    { *m = ShippingCost{} }
func (m *ShippingCost) String() string            { return proto.CompactTextString(m) }
func (*ShippingCost) ProtoMessage()               {}
func (*ShippingCost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ShippingCost) GetMethod() ShippingMethod {
	if m != nil {
		return m.Method
	}
	return ShippingMethod_SM_UNKNOWN
}

func (m *ShippingCost) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Error struct {
	Code     ErrorCode `protobuf:"varint,1,opt,name=code,enum=shipping.ErrorCode" json:"code,omitempty"`
	HttpHint uint32    `protobuf:"varint,2,opt,name=http_hint,json=httpHint" json:"http_hint,omitempty"`
	Message  string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Error) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_UNKNOWN
}

func (m *Error) GetHttpHint() uint32 {
	if m != nil {
		return m.HttpHint
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ShippingCostRequest)(nil), "shipping.ShippingCostRequest")
	proto.RegisterType((*ShippingCostResponse)(nil), "shipping.ShippingCostResponse")
	proto.RegisterType((*MarkShippedRequest)(nil), "shipping.MarkShippedRequest")
	proto.RegisterType((*MarkShippedResponse)(nil), "shipping.MarkShippedResponse")
	proto.RegisterType((*ShippingStatusRequest)(nil), "shipping.ShippingStatusRequest")
	proto.RegisterType((*ShippingStatusResponse)(nil), "shipping.ShippingStatusResponse")
	proto.RegisterType((*ShippingStatus)(nil), "shipping.ShippingStatus")
	proto.RegisterType((*ShippingCost)(nil), "shipping.ShippingCost")
	proto.RegisterType((*Error)(nil), "shipping.Error")
	proto.RegisterEnum("shipping.ShippingMethod", ShippingMethod_name, ShippingMethod_value)
	proto.RegisterEnum("shipping.ErrorCode", ErrorCode_name, ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Shipping service

type ShippingClient interface {
	GetShippingCost(ctx context.Context, in *ShippingCostRequest, opts ...client.CallOption) (*ShippingCostResponse, error)
	MarkItemShipped(ctx context.Context, in *MarkShippedRequest, opts ...client.CallOption) (*MarkShippedResponse, error)
	GetShippingStatus(ctx context.Context, in *ShippingStatusRequest, opts ...client.CallOption) (*ShippingStatusResponse, error)
}

type shippingClient struct {
	c           client.Client
	serviceName string
}

func NewShippingClient(serviceName string, c client.Client) ShippingClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "shipping"
	}
	return &shippingClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *shippingClient) GetShippingCost(ctx context.Context, in *ShippingCostRequest, opts ...client.CallOption) (*ShippingCostResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Shipping.GetShippingCost", in)
	out := new(ShippingCostResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingClient) MarkItemShipped(ctx context.Context, in *MarkShippedRequest, opts ...client.CallOption) (*MarkShippedResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Shipping.MarkItemShipped", in)
	out := new(MarkShippedResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingClient) GetShippingStatus(ctx context.Context, in *ShippingStatusRequest, opts ...client.CallOption) (*ShippingStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Shipping.GetShippingStatus", in)
	out := new(ShippingStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Shipping service

type ShippingHandler interface {
	GetShippingCost(context.Context, *ShippingCostRequest, *ShippingCostResponse) error
	MarkItemShipped(context.Context, *MarkShippedRequest, *MarkShippedResponse) error
	GetShippingStatus(context.Context, *ShippingStatusRequest, *ShippingStatusResponse) error
}

func RegisterShippingHandler(s server.Server, hdlr ShippingHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Shipping{hdlr}, opts...))
}

type Shipping struct {
	ShippingHandler
}

func (h *Shipping) GetShippingCost(ctx context.Context, in *ShippingCostRequest, out *ShippingCostResponse) error {
	return h.ShippingHandler.GetShippingCost(ctx, in, out)
}

func (h *Shipping) MarkItemShipped(ctx context.Context, in *MarkShippedRequest, out *MarkShippedResponse) error {
	return h.ShippingHandler.MarkItemShipped(ctx, in, out)
}

func (h *Shipping) GetShippingStatus(ctx context.Context, in *ShippingStatusRequest, out *ShippingStatusResponse) error {
	return h.ShippingHandler.GetShippingStatus(ctx, in, out)
}

func init() { proto.RegisterFile("shipping.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 606 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0xed, 0x62, 0x12, 0xcc, 0x10, 0xb0, 0xb3, 0x49, 0x23, 0x37, 0x6d, 0x5a, 0x64, 0xa9, 0x0a,
	0xca, 0x21, 0xaa, 0xe8, 0xb9, 0x87, 0x34, 0x71, 0x1b, 0x84, 0x30, 0x68, 0x1d, 0x68, 0xd5, 0x8b,
	0x45, 0xec, 0x15, 0x58, 0x08, 0xdb, 0xf5, 0x2e, 0x97, 0x28, 0x52, 0xa5, 0xaa, 0x1f, 0xd1, 0xcf,
	0xad, 0xbc, 0x5e, 0x03, 0x4e, 0xa0, 0x4d, 0x6f, 0xfb, 0x66, 0x76, 0x9e, 0xdf, 0x3c, 0xcf, 0x2c,
	0x34, 0xd8, 0x34, 0x88, 0xe3, 0x20, 0x9c, 0x9c, 0xc7, 0x49, 0xc4, 0x23, 0xac, 0xe6, 0xd8, 0xfc,
	0x08, 0x07, 0x8e, 0x3c, 0x5f, 0x46, 0x8c, 0x13, 0xfa, 0x7d, 0x41, 0x19, 0xc7, 0x3a, 0x28, 0x6c,
	0xb6, 0x30, 0x50, 0x13, 0xb5, 0xaa, 0x24, 0x3d, 0xe2, 0x17, 0xa0, 0xde, 0x05, 0xb1, 0xeb, 0x45,
	0x3e, 0x35, 0x4a, 0x22, 0x5c, 0xb9, 0x0b, 0xe2, 0xcb, 0xc8, 0xa7, 0xe6, 0x3d, 0x1c, 0x16, 0x39,
	0x58, 0x1c, 0x85, 0x8c, 0xe2, 0x0f, 0xab, 0xef, 0xba, 0x5e, 0xc4, 0x38, 0x33, 0x50, 0x53, 0x69,
	0xd5, 0xda, 0x47, 0xe7, 0x4b, 0x39, 0x85, 0xba, 0x3a, 0x5b, 0x43, 0x0c, 0xbf, 0x85, 0x1d, 0x9a,
	0x24, 0x51, 0x62, 0xf8, 0x4d, 0xd4, 0xaa, 0xb5, 0xb5, 0x55, 0x95, 0x95, 0x86, 0x49, 0x96, 0x35,
	0x7f, 0x23, 0xc0, 0xbd, 0x71, 0x32, 0x13, 0x54, 0xd4, 0xff, 0x6b, 0x07, 0x51, 0xe2, 0xd3, 0xc4,
	0x0d, 0x7c, 0xd1, 0x41, 0x99, 0x54, 0x04, 0xee, 0xf8, 0x18, 0x43, 0x39, 0x8c, 0x38, 0x35, 0x14,
	0x71, 0x5b, 0x9c, 0xf1, 0x05, 0x68, 0x4b, 0xf5, 0x73, 0xca, 0xa7, 0x91, 0x6f, 0x94, 0x9b, 0xa8,
	0xd5, 0x68, 0x1b, 0x8f, 0xe5, 0xf7, 0x44, 0x9e, 0x2c, 0xdb, 0xcd, 0xb0, 0xf9, 0x03, 0x0e, 0x0a,
	0xca, 0xa4, 0x2f, 0x06, 0x54, 0xd8, 0xc2, 0xf3, 0x28, 0x63, 0x42, 0x9e, 0x4a, 0x72, 0x88, 0x4f,
	0x41, 0xe3, 0xc9, 0xd8, 0x9b, 0xa5, 0xdf, 0x0c, 0x17, 0xf3, 0x5b, 0x9a, 0x48, 0xaf, 0x1b, 0x79,
	0xd8, 0x16, 0xd1, 0xa7, 0x7a, 0xd3, 0x86, 0xe7, 0xb9, 0x44, 0x87, 0x8f, 0xf9, 0x82, 0xe5, 0xee,
	0xac, 0x7b, 0x81, 0x0a, 0x5e, 0x98, 0x3f, 0x11, 0x1c, 0x3d, 0x2c, 0x92, 0xc2, 0xd7, 0x2d, 0x61,
	0x22, 0x25, 0x8a, 0x6b, 0x9b, 0x2c, 0x91, 0xa5, 0x4b, 0x4b, 0x32, 0xfc, 0x54, 0xe1, 0xf7, 0xd0,
	0x28, 0x12, 0x6d, 0xb2, 0x06, 0x6d, 0xb4, 0x66, 0xc3, 0x7f, 0x2b, 0xfd, 0xe7, 0x7f, 0x1b, 0xc1,
	0xde, 0xfa, 0x60, 0xe2, 0x77, 0xb0, 0x2b, 0x99, 0xd0, 0x3f, 0x98, 0xe4, 0x3d, 0x7c, 0x08, 0x3b,
	0x71, 0x12, 0x78, 0xd9, 0xaa, 0x28, 0x24, 0x03, 0xe6, 0x04, 0x76, 0x44, 0x97, 0xf8, 0x14, 0xca,
	0x62, 0x91, 0x32, 0xba, 0x83, 0x07, 0x26, 0xa4, 0x4b, 0x45, 0xc4, 0x05, 0xfc, 0x12, 0xaa, 0x53,
	0xce, 0x63, 0x77, 0x1a, 0x84, 0x5c, 0x70, 0xd5, 0x89, 0x9a, 0x06, 0xae, 0x83, 0x90, 0xa7, 0x73,
	0x34, 0xa7, 0x8c, 0x8d, 0x27, 0xf9, 0xe0, 0xe6, 0xf0, 0x6c, 0xb8, 0xb2, 0x2f, 0x13, 0x86, 0x1b,
	0x00, 0x4e, 0xcf, 0x1d, 0xda, 0x5d, 0xbb, 0xff, 0xc5, 0xd6, 0x9f, 0xe1, 0x1a, 0x54, 0x52, 0xec,
	0x0c, 0x1c, 0x1d, 0x61, 0x80, 0xdd, 0x14, 0x0c, 0x1c, 0xbd, 0x84, 0xf7, 0x40, 0x75, 0x7a, 0xee,
	0x27, 0xeb, 0xca, 0xfa, 0xaa, 0x2b, 0x12, 0x91, 0x8b, 0x91, 0x65, 0xeb, 0xe5, 0xb3, 0x2e, 0x54,
	0x97, 0x02, 0x53, 0x86, 0x15, 0x5d, 0x1d, 0xaa, 0x76, 0xdf, 0x19, 0x5e, 0x5e, 0x3b, 0xdd, 0xa1,
	0x8e, 0xb0, 0x06, 0xb5, 0x0c, 0xf6, 0xc9, 0x95, 0x45, 0xf4, 0x12, 0xde, 0x87, 0xba, 0xdd, 0xbf,
	0xb9, 0x18, 0xde, 0x5c, 0xf7, 0x49, 0xe7, 0x9b, 0x75, 0xa5, 0x2b, 0xed, 0x5f, 0x25, 0x50, 0x73,
	0x91, 0x78, 0x00, 0xda, 0x67, 0xca, 0x0b, 0xa6, 0x9f, 0x6c, 0x79, 0x25, 0xb2, 0x09, 0x3e, 0x7e,
	0xbd, 0x2d, 0x2d, 0x67, 0xd5, 0x06, 0x2d, 0xdd, 0xbd, 0x0e, 0xa7, 0x73, 0xb9, 0x7f, 0xf8, 0xd5,
	0xaa, 0xe4, 0xf1, 0x83, 0x71, 0x7c, 0xb2, 0x25, 0x2b, 0xf9, 0x46, 0xb0, 0xbf, 0xa6, 0x50, 0x0e,
	0xe5, 0x9b, 0xad, 0x73, 0x2f, 0x49, 0x9b, 0xdb, 0x2f, 0x64, 0xbc, 0xb7, 0xbb, 0xe2, 0x45, 0x7e,
	0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xa0, 0x58, 0x80, 0xa3, 0x05, 0x00, 0x00,
}

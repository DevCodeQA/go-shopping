// Code generated by protoc-gen-go. DO NOT EDIT.
// source: catalog.proto

/*
Package catalog is a generated protocol buffer package.

It is generated from these files:
	catalog.proto

It has these top-level messages:
	DetailRequest
	DetailResponse
	CategoryRequest
	CategoryResponse
	CategoryProductsRequest
	CategoryProductsResponse
	SearchRequest
	SearchResponse
	Product
	ProductCategory
*/
package catalog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DetailRequest struct {
	SKU string `protobuf:"bytes,1,opt,name=SKU" json:"SKU,omitempty"`
}

func (m *DetailRequest) Reset()                    { *m = DetailRequest{} }
func (m *DetailRequest) String() string            { return proto.CompactTextString(m) }
func (*DetailRequest) ProtoMessage()               {}
func (*DetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DetailRequest) GetSKU() string {
	if m != nil {
		return m.SKU
	}
	return ""
}

type DetailResponse struct {
	Product *Product `protobuf:"bytes,1,opt,name=Product" json:"Product,omitempty"`
}

func (m *DetailResponse) Reset()                    { *m = DetailResponse{} }
func (m *DetailResponse) String() string            { return proto.CompactTextString(m) }
func (*DetailResponse) ProtoMessage()               {}
func (*DetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DetailResponse) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type CategoryRequest struct {
	Unused int32 `protobuf:"varint,1,opt,name=Unused" json:"Unused,omitempty"`
}

func (m *CategoryRequest) Reset()                    { *m = CategoryRequest{} }
func (m *CategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*CategoryRequest) ProtoMessage()               {}
func (*CategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CategoryRequest) GetUnused() int32 {
	if m != nil {
		return m.Unused
	}
	return 0
}

type CategoryResponse struct {
	Categories []*ProductCategory `protobuf:"bytes,1,rep,name=Categories" json:"Categories,omitempty"`
}

func (m *CategoryResponse) Reset()                    { *m = CategoryResponse{} }
func (m *CategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*CategoryResponse) ProtoMessage()               {}
func (*CategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CategoryResponse) GetCategories() []*ProductCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

type CategoryProductsRequest struct {
	CategoryID uint64 `protobuf:"varint,1,opt,name=CategoryID" json:"CategoryID,omitempty"`
}

func (m *CategoryProductsRequest) Reset()                    { *m = CategoryProductsRequest{} }
func (m *CategoryProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*CategoryProductsRequest) ProtoMessage()               {}
func (*CategoryProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CategoryProductsRequest) GetCategoryID() uint64 {
	if m != nil {
		return m.CategoryID
	}
	return 0
}

type CategoryProductsResponse struct {
	Products []*Product `protobuf:"bytes,1,rep,name=Products" json:"Products,omitempty"`
}

func (m *CategoryProductsResponse) Reset()                    { *m = CategoryProductsResponse{} }
func (m *CategoryProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*CategoryProductsResponse) ProtoMessage()               {}
func (*CategoryProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CategoryProductsResponse) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type SearchRequest struct {
	SearchTerm string   `protobuf:"bytes,1,opt,name=SearchTerm" json:"SearchTerm,omitempty"`
	Categories []uint64 `protobuf:"varint,2,rep,packed,name=Categories" json:"Categories,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SearchRequest) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

func (m *SearchRequest) GetCategories() []uint64 {
	if m != nil {
		return m.Categories
	}
	return nil
}

type SearchResponse struct {
	SearchResults []*Product `protobuf:"bytes,1,rep,name=SearchResults" json:"SearchResults,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SearchResponse) GetSearchResults() []*Product {
	if m != nil {
		return m.SearchResults
	}
	return nil
}

type Product struct {
	SKU          string `protobuf:"bytes,1,opt,name=SKU" json:"SKU,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
	Manufacturer string `protobuf:"bytes,4,opt,name=Manufacturer" json:"Manufacturer,omitempty"`
	Model        string `protobuf:"bytes,5,opt,name=Model" json:"Model,omitempty"`
	Price        int64  `protobuf:"varint,6,opt,name=Price" json:"Price,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Product) GetSKU() string {
	if m != nil {
		return m.SKU
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *Product) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Product) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type ProductCategory struct {
	CategoryID  uint64 `protobuf:"varint,1,opt,name=CategoryID" json:"CategoryID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
}

func (m *ProductCategory) Reset()                    { *m = ProductCategory{} }
func (m *ProductCategory) String() string            { return proto.CompactTextString(m) }
func (*ProductCategory) ProtoMessage()               {}
func (*ProductCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ProductCategory) GetCategoryID() uint64 {
	if m != nil {
		return m.CategoryID
	}
	return 0
}

func (m *ProductCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductCategory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*DetailRequest)(nil), "catalog.DetailRequest")
	proto.RegisterType((*DetailResponse)(nil), "catalog.DetailResponse")
	proto.RegisterType((*CategoryRequest)(nil), "catalog.CategoryRequest")
	proto.RegisterType((*CategoryResponse)(nil), "catalog.CategoryResponse")
	proto.RegisterType((*CategoryProductsRequest)(nil), "catalog.CategoryProductsRequest")
	proto.RegisterType((*CategoryProductsResponse)(nil), "catalog.CategoryProductsResponse")
	proto.RegisterType((*SearchRequest)(nil), "catalog.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "catalog.SearchResponse")
	proto.RegisterType((*Product)(nil), "catalog.Product")
	proto.RegisterType((*ProductCategory)(nil), "catalog.ProductCategory")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Catalog service

type CatalogClient interface {
	GetProductDetails(ctx context.Context, in *DetailRequest, opts ...client.CallOption) (*DetailResponse, error)
	GetProductCategories(ctx context.Context, in *CategoryRequest, opts ...client.CallOption) (*CategoryResponse, error)
	GetProductsInCategory(ctx context.Context, in *CategoryProductsRequest, opts ...client.CallOption) (*CategoryProductsResponse, error)
	ProductSearch(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type catalogClient struct {
	c           client.Client
	serviceName string
}

func NewCatalogClient(serviceName string, c client.Client) CatalogClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "catalog"
	}
	return &catalogClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *catalogClient) GetProductDetails(ctx context.Context, in *DetailRequest, opts ...client.CallOption) (*DetailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Catalog.GetProductDetails", in)
	out := new(DetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogClient) GetProductCategories(ctx context.Context, in *CategoryRequest, opts ...client.CallOption) (*CategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Catalog.GetProductCategories", in)
	out := new(CategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogClient) GetProductsInCategory(ctx context.Context, in *CategoryProductsRequest, opts ...client.CallOption) (*CategoryProductsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Catalog.GetProductsInCategory", in)
	out := new(CategoryProductsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogClient) ProductSearch(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Catalog.ProductSearch", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Catalog service

type CatalogHandler interface {
	GetProductDetails(context.Context, *DetailRequest, *DetailResponse) error
	GetProductCategories(context.Context, *CategoryRequest, *CategoryResponse) error
	GetProductsInCategory(context.Context, *CategoryProductsRequest, *CategoryProductsResponse) error
	ProductSearch(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterCatalogHandler(s server.Server, hdlr CatalogHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Catalog{hdlr}, opts...))
}

type Catalog struct {
	CatalogHandler
}

func (h *Catalog) GetProductDetails(ctx context.Context, in *DetailRequest, out *DetailResponse) error {
	return h.CatalogHandler.GetProductDetails(ctx, in, out)
}

func (h *Catalog) GetProductCategories(ctx context.Context, in *CategoryRequest, out *CategoryResponse) error {
	return h.CatalogHandler.GetProductCategories(ctx, in, out)
}

func (h *Catalog) GetProductsInCategory(ctx context.Context, in *CategoryProductsRequest, out *CategoryProductsResponse) error {
	return h.CatalogHandler.GetProductsInCategory(ctx, in, out)
}

func (h *Catalog) ProductSearch(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.CatalogHandler.ProductSearch(ctx, in, out)
}

func init() { proto.RegisterFile("catalog.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6f, 0xd3, 0x30,
	0x18, 0x56, 0x9a, 0x7e, 0xc0, 0x5b, 0xb2, 0x15, 0x6b, 0x6c, 0xa6, 0x07, 0x94, 0xf9, 0x54, 0x10,
	0xda, 0xa1, 0x48, 0x08, 0x24, 0x0e, 0x48, 0x8b, 0xc4, 0xa6, 0x31, 0x98, 0x32, 0x7a, 0xe3, 0x62,
	0x52, 0x53, 0x22, 0xa5, 0x71, 0xb1, 0x9d, 0x43, 0x7f, 0x0e, 0xff, 0x83, 0x1f, 0x87, 0xe2, 0xd8,
	0x89, 0x93, 0xa0, 0x22, 0x71, 0x8b, 0x1f, 0x3f, 0xef, 0xf3, 0x3e, 0xef, 0x87, 0x03, 0x41, 0x42,
	0x15, 0xcd, 0xf8, 0xe6, 0x62, 0x27, 0xb8, 0xe2, 0x68, 0x62, 0x8e, 0xe4, 0x1c, 0x82, 0x88, 0x29,
	0x9a, 0x66, 0x31, 0xfb, 0x59, 0x30, 0xa9, 0xd0, 0x0c, 0xfc, 0xfb, 0x9b, 0x15, 0xf6, 0x42, 0x6f,
	0xf1, 0x30, 0x2e, 0x3f, 0xc9, 0x3b, 0x38, 0xb2, 0x14, 0xb9, 0xe3, 0xb9, 0x64, 0xe8, 0x05, 0x4c,
	0xee, 0x04, 0x5f, 0x17, 0x89, 0xd2, 0xbc, 0xe9, 0x72, 0x76, 0x61, 0xe5, 0x0d, 0x1e, 0x5b, 0x02,
	0x79, 0x0e, 0xc7, 0x97, 0x54, 0xb1, 0x0d, 0x17, 0x7b, 0x9b, 0xe2, 0x14, 0xc6, 0xab, 0xbc, 0x90,
	0x6c, 0xad, 0xa3, 0x47, 0xb1, 0x39, 0x91, 0x8f, 0x30, 0x6b, 0xa8, 0x26, 0xd5, 0x1b, 0x00, 0x83,
	0xa5, 0x4c, 0x62, 0x2f, 0xf4, 0x17, 0xd3, 0x25, 0xee, 0x66, 0xab, 0xa3, 0x1c, 0x2e, 0x79, 0x0b,
	0x67, 0x16, 0x37, 0x34, 0x69, 0x0d, 0x3c, 0xab, 0x45, 0xf7, 0xd7, 0x91, 0x36, 0x31, 0x8c, 0x1d,
	0x84, 0x5c, 0x01, 0xee, 0x87, 0x1a, 0x43, 0x2f, 0xe1, 0x81, 0xc5, 0x8c, 0x9d, 0x7e, 0xf1, 0x35,
	0x83, 0x7c, 0x86, 0xe0, 0x9e, 0x51, 0x91, 0xfc, 0x70, 0x52, 0x57, 0xc0, 0x17, 0x26, 0xb6, 0xa6,
	0xcb, 0x0e, 0xe2, 0x58, 0x2b, 0xeb, 0x1d, 0x84, 0xbe, 0x63, 0xad, 0xac, 0xea, 0x0a, 0x8e, 0xac,
	0xa0, 0x31, 0xf4, 0xba, 0x49, 0x21, 0x8b, 0xec, 0x80, 0xab, 0x36, 0x8d, 0xfc, 0xf2, 0xea, 0x29,
	0xf6, 0x87, 0x8e, 0x10, 0x0c, 0x3f, 0xd1, 0x2d, 0xc3, 0x03, 0x0d, 0xe9, 0x6f, 0x14, 0xc2, 0x34,
	0x62, 0x32, 0x11, 0xe9, 0x4e, 0xa5, 0x3c, 0xc7, 0xbe, 0xbe, 0x72, 0x21, 0x44, 0xe0, 0xd1, 0x2d,
	0xcd, 0x8b, 0xef, 0x34, 0x51, 0x85, 0x60, 0x02, 0x0f, 0x35, 0xa5, 0x85, 0xa1, 0x13, 0x18, 0xdd,
	0xf2, 0x35, 0xcb, 0xf0, 0x48, 0x5f, 0x56, 0x87, 0x12, 0xbd, 0x13, 0x69, 0xc2, 0xf0, 0x38, 0xf4,
	0x16, 0x7e, 0x5c, 0x1d, 0xc8, 0x06, 0x8e, 0x3b, 0x23, 0xfe, 0xd7, 0xec, 0xfe, 0xcf, 0xf8, 0xf2,
	0xf7, 0x00, 0x26, 0x97, 0x55, 0xbf, 0x50, 0x04, 0x8f, 0x3f, 0x30, 0x65, 0xf2, 0x56, 0x9b, 0x2f,
	0xd1, 0x69, 0xdd, 0xce, 0xd6, 0x73, 0x99, 0x9f, 0xf5, 0x70, 0x33, 0x96, 0x1b, 0x38, 0x69, 0x54,
	0x9a, 0x01, 0xa2, 0x66, 0x79, 0x3b, 0xcf, 0x62, 0xfe, 0xf4, 0x2f, 0x37, 0x46, 0xec, 0x2b, 0x3c,
	0x69, 0xc4, 0xe4, 0x75, 0x5e, 0x77, 0x23, 0xec, 0xc5, 0x74, 0x76, 0x7d, 0x7e, 0x7e, 0x80, 0x61,
	0xd4, 0xdf, 0x43, 0x60, 0xb0, 0x6a, 0x43, 0x9c, 0x62, 0x5b, 0xcb, 0xeb, 0x14, 0xdb, 0xde, 0xc1,
	0x6f, 0x63, 0xfd, 0x57, 0x79, 0xf5, 0x27, 0x00, 0x00, 0xff, 0xff, 0xde, 0x19, 0x5b, 0xc4, 0x66,
	0x04, 0x00, 0x00,
}
